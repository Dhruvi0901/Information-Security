--------------------CEASER CIPHER (IS)------------------


def encryption(plain, key):
 
  cipher = ''
  for char in plain:
    if char == ' ':
      cipher = cipher + char
    elif  char.isupper():
      cipher = cipher + chr((ord(char) + key - 65) % 26 + 65)
    else:
      cipher = cipher + chr((ord(char) + key - 97) % 26 + 97)
  
  return cipher

def decryption(cipher, key):
 
  plain = ''
  for i in cipher:
    if i == ' ':
      plain = plain + i
    elif  i.isupper():
      plain = plain + chr((ord(i) + key + 65) % 26 + 65)
    else:
      plain = plain + chr((ord(i) + key + 97) % 26 + 97)
  
  return cipher
 
text = input("enter string: ")
key = int(input("enter key number: "))
print("original string: ", text)
print("after encryption: ", encryption(text, key))
print("after decryption: ", decryption(text, key))



-----------------------------------------

#include<stdio.h>
#include<string.h>
#include<conio.h>
#include<ctype.h>
void main()
{
    char p[20], c[20];
    int key,i,l;
    int ans;
    
    
    printf("\n Enter the Plain Text:");
    scanf("%s",p);
    printf("\n Enter the Key value:");
    scanf("%d",&key);
    printf("\n \n \t Plain Text: %s",p);
    printf("\n \n \t Encrypted Text: ");
    
    for(i=0, l=strlen(p); i< l; i++)
    {
        c[i] = p[i] + key;
        if(isupper(p[i]) && (c[i] > 'Z'))
        c[i]= c[i]-26;
        if(islower(p[i]) && (c[i] > 'z'))
        c[i]= c[i]-26;
        printf("%c", c[i]);
    }
    printf("\n \n \t After Description: ");
    for(i=0; i< l; i++)
    {
        p[i] = c[i] - key;
        if(isupper(c[i]) && (p[i] < 'A'))
        p[i]= p[i]+26;
        if(islower(c[i]) && (p[i] < 'a'))
        p[i]= p[i]+26;
        printf("%c", p[i]);
    }
    getch();
    
}
